{"ast":null,"code":"var _jsxFileName = \"/var/www/html/workspace/react-assignment/src/components/capabilities.js\";\nimport React, { useRef, useEffect } from \"react\";\nimport Col from \"react-bootstrap/Col\";\n/* gsap imports */\n\nimport gsap, { Power2 } from \"gsap\";\nimport ScrollTrigger from \"gsap/ScrollTrigger\";\n\nconst Capabilities = props => {\n  let selectCards = useRef();\n  let selectcardHeading = useRef();\n  let selectcardPara = useRef();\n  useEffect(() => {\n    let animateCard = gsap.timeline();\n    let animateHeading = gsap.timeline();\n    let animateParagraph = gsap.timeline(); // match media function to set up animations for screens larger then 1200px\n\n    ScrollTrigger.matchMedia({\n      \"(min-width: 1200px)\": function () {\n        animateCard.from(selectCards, {\n          scrollTrigger: {\n            y: -100,\n            opacity: 0,\n            ease: Power2.easeInOut,\n            duration: 0.5,\n            delay: 0.2\n          }\n        });\n        animateHeading.from(selectcardHeading, {\n          y: -100,\n          opacity: 0,\n          duration: 0.5,\n          delay: 0.4,\n          ease: Power2.easeInOut\n        });\n        animateParagraph.from(selectcardPara, {\n          y: 100,\n          opacity: 0,\n          duration: 0.5,\n          delay: 0.6,\n          ease: Power2.easeInOut\n        });\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"img-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: props.imgPath,\n    alt: \"client\",\n    className: \"img-fluid\",\n    ref: e => selectCards = e,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    ref: e => selectcardHeading = e,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, props.heading), /*#__PURE__*/React.createElement(\"p\", {\n    ref: e => selectcardPara = e,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, props.paragraph))));\n};\n\nexport default Capabilities;","map":{"version":3,"sources":["/var/www/html/workspace/react-assignment/src/components/capabilities.js"],"names":["React","useRef","useEffect","Col","gsap","Power2","ScrollTrigger","Capabilities","props","selectCards","selectcardHeading","selectcardPara","animateCard","timeline","animateHeading","animateParagraph","matchMedia","from","scrollTrigger","y","opacity","ease","easeInOut","duration","delay","imgPath","e","heading","paragraph"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA;;AACA,OAAOC,IAAP,IAAeC,MAAf,QAA6B,MAA7B;AACA,OAAOC,aAAP,MAA0B,oBAA1B;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,MAAIC,WAAW,GAAGR,MAAM,EAAxB;AACA,MAAIS,iBAAiB,GAAGT,MAAM,EAA9B;AACA,MAAIU,cAAc,GAAGV,MAAM,EAA3B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,WAAW,GAAGR,IAAI,CAACS,QAAL,EAAlB;AACA,QAAIC,cAAc,GAAGV,IAAI,CAACS,QAAL,EAArB;AACA,QAAIE,gBAAgB,GAAGX,IAAI,CAACS,QAAL,EAAvB,CAHc,CAId;;AACAP,IAAAA,aAAa,CAACU,UAAd,CAAyB;AACvB,6BAAuB,YAAY;AACjCJ,QAAAA,WAAW,CAACK,IAAZ,CAAiBR,WAAjB,EAA8B;AAC5BS,UAAAA,aAAa,EAAE;AACbC,YAAAA,CAAC,EAAE,CAAC,GADS;AAEbC,YAAAA,OAAO,EAAE,CAFI;AAGbC,YAAAA,IAAI,EAAEhB,MAAM,CAACiB,SAHA;AAIbC,YAAAA,QAAQ,EAAE,GAJG;AAKbC,YAAAA,KAAK,EAAE;AALM;AADa,SAA9B;AASAV,QAAAA,cAAc,CAACG,IAAf,CAAoBP,iBAApB,EAAuC;AACrCS,UAAAA,CAAC,EAAE,CAAC,GADiC;AAErCC,UAAAA,OAAO,EAAE,CAF4B;AAGrCG,UAAAA,QAAQ,EAAE,GAH2B;AAIrCC,UAAAA,KAAK,EAAE,GAJ8B;AAKrCH,UAAAA,IAAI,EAAEhB,MAAM,CAACiB;AALwB,SAAvC;AAOAP,QAAAA,gBAAgB,CAACE,IAAjB,CAAsBN,cAAtB,EAAsC;AACpCQ,UAAAA,CAAC,EAAE,GADiC;AAEpCC,UAAAA,OAAO,EAAE,CAF2B;AAGpCG,UAAAA,QAAQ,EAAE,GAH0B;AAIpCC,UAAAA,KAAK,EAAE,GAJ6B;AAKpCH,UAAAA,IAAI,EAAEhB,MAAM,CAACiB;AALuB,SAAtC;AAOD;AAzBsB,KAAzB;AA2BD,GAhCQ,CAAT;AAiCA,sBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAEd,KAAK,CAACiB,OADb;AAEE,IAAA,GAAG,EAAC,QAFN;AAGE,IAAA,SAAS,EAAC,WAHZ;AAIE,IAAA,GAAG,EAAGC,CAAD,IAAQjB,WAAW,GAAGiB,CAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,GAAG,EAAGA,CAAD,IAAQhB,iBAAiB,GAAGgB,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0ClB,KAAK,CAACmB,OAAhD,CADF,eAEE;AAAG,IAAA,GAAG,EAAGD,CAAD,IAAQf,cAAc,GAAGe,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsClB,KAAK,CAACoB,SAA5C,CAFF,CAPF,CADF,CADF;AAgBD,CAtDD;;AAwDA,eAAerB,YAAf","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport Col from \"react-bootstrap/Col\";\n/* gsap imports */\nimport gsap, { Power2 } from \"gsap\";\nimport ScrollTrigger from \"gsap/ScrollTrigger\";\n\nconst Capabilities = (props) => {\n  let selectCards = useRef();\n  let selectcardHeading = useRef();\n  let selectcardPara = useRef();\n\n  useEffect(() => {\n    let animateCard = gsap.timeline();\n    let animateHeading = gsap.timeline();\n    let animateParagraph = gsap.timeline();\n    // match media function to set up animations for screens larger then 1200px\n    ScrollTrigger.matchMedia({\n      \"(min-width: 1200px)\": function () {\n        animateCard.from(selectCards, {\n          scrollTrigger: {\n            y: -100,\n            opacity: 0,\n            ease: Power2.easeInOut,\n            duration: 0.5,\n            delay: 0.2,\n          },\n        });\n        animateHeading.from(selectcardHeading, {\n          y: -100,\n          opacity: 0,\n          duration: 0.5,\n          delay: 0.4,\n          ease: Power2.easeInOut,\n        });\n        animateParagraph.from(selectcardPara, {\n          y: 100,\n          opacity: 0,\n          duration: 0.5,\n          delay: 0.6,\n          ease: Power2.easeInOut,\n        });\n      },\n    });\n  });\n  return (\n    <Col md={4}>\n      <div className=\"img-wrapper\">\n        <img\n          src={props.imgPath}\n          alt=\"client\"\n          className=\"img-fluid\"\n          ref={(e) => (selectCards = e)}\n        />\n        <div className=\"overlay-text\">\n          <h1 ref={(e) => (selectcardHeading = e)}>{props.heading}</h1>\n          <p ref={(e) => (selectcardPara = e)}>{props.paragraph}</p>\n        </div>\n      </div>\n    </Col>\n  );\n};\n\nexport default Capabilities;\n"]},"metadata":{},"sourceType":"module"}