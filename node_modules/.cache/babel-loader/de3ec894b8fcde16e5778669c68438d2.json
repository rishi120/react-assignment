{"ast":null,"code":"var _jsxFileName = \"/var/www/html/workspace/react-assignment/src/components/capabilities.js\";\nimport React, { useRef, useEffect } from \"react\";\nimport Col from \"react-bootstrap/Col\";\n/* gsap imports */\n\nimport gsap, { Power2 } from \"gsap\";\nimport ScrollTrigger from \"gsap/ScrollTrigger\";\ngsap.registerPlugin(ScrollTrigger);\n\nconst Capabilities = props => {\n  let selectCards = useRef();\n  let selectcardHeading = useRef();\n  let selectcardPara = useRef();\n  useEffect(() => {\n    let animateCard = gsap.timeline();\n    let animateHeading = gsap.timeline();\n    let animateParagraph = gsap.timeline(); // match media function to set up animations for screens larger then 1200px\n\n    ScrollTrigger.matchMedia({\n      \"(min-width: 1200px)\": function () {\n        animateCard.from(selectCards, {\n          y: -100,\n          opacity: 0,\n          ease: Power2.easeInOut,\n          // duration: 0.3,\n          delay: 0.2,\n          scrollTrigger: {\n            trigger: \"selectCards\",\n            start: \"top 80%\",\n            // end: \"+=100\",\n            scrub: 1\n          }\n        });\n        animateHeading.from(selectcardHeading, {\n          y: 100,\n          opacity: 0,\n          // duration: 0.3,\n          delay: 0.4,\n          ease: Power2.easeInOut,\n          scrollTrigger: {\n            trigger: \"selectcardHeading\",\n            start: \"top 80%\",\n            // end: \"+=100\",\n            scrub: 1\n          }\n        });\n        animateParagraph.from(selectcardPara, {\n          y: 100,\n          opacity: 0,\n          // duration: 0.3,\n          delay: 0.6,\n          ease: Power2.easeInOut,\n          scrollTrigger: {\n            trigger: \"selectcardPara\",\n            start: \"top 80%\",\n            // end: \"+=100\",\n            scrub: 1\n          }\n        });\n      }\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"img-wrapper\",\n    ref: e => selectCards = e,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: props.imgPath,\n    alt: \"client\",\n    className: \"img-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    ref: e => selectcardHeading = e,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, props.heading), /*#__PURE__*/React.createElement(\"p\", {\n    ref: e => selectcardPara = e,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, props.paragraph))));\n};\n\nexport default Capabilities;","map":{"version":3,"sources":["/var/www/html/workspace/react-assignment/src/components/capabilities.js"],"names":["React","useRef","useEffect","Col","gsap","Power2","ScrollTrigger","registerPlugin","Capabilities","props","selectCards","selectcardHeading","selectcardPara","animateCard","timeline","animateHeading","animateParagraph","matchMedia","from","y","opacity","ease","easeInOut","delay","scrollTrigger","trigger","start","scrub","e","imgPath","heading","paragraph"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport Col from \"react-bootstrap/Col\";\n/* gsap imports */\nimport gsap, { Power2 } from \"gsap\";\nimport ScrollTrigger from \"gsap/ScrollTrigger\";\ngsap.registerPlugin(ScrollTrigger);\n\nconst Capabilities = (props) => {\n  let selectCards = useRef();\n  let selectcardHeading = useRef();\n  let selectcardPara = useRef();\n\n  useEffect(() => {\n    let animateCard = gsap.timeline();\n    let animateHeading = gsap.timeline();\n    let animateParagraph = gsap.timeline();\n    // match media function to set up animations for screens larger then 1200px\n    ScrollTrigger.matchMedia({\n      \"(min-width: 1200px)\": function () {\n        animateCard.from(selectCards, {\n          y: -100,\n          opacity: 0,\n          ease: Power2.easeInOut,\n          // duration: 0.3,\n          delay: 0.2,\n          scrollTrigger: {\n            trigger: \"selectCards\",\n            start: \"top 80%\",\n            // end: \"+=100\",\n            scrub: 1,\n          },\n        });\n        animateHeading.from(selectcardHeading, {\n          y: 100,\n          opacity: 0,\n          // duration: 0.3,\n          delay: 0.4,\n          ease: Power2.easeInOut,\n          scrollTrigger: {\n            trigger: \"selectcardHeading\",\n            start: \"top 80%\",\n            // end: \"+=100\",\n            scrub: 1,\n          },\n        });\n        animateParagraph.from(selectcardPara, {\n          y: 100,\n          opacity: 0,\n          // duration: 0.3,\n          delay: 0.6,\n          ease: Power2.easeInOut,\n          scrollTrigger: {\n            trigger: \"selectcardPara\",\n            start: \"top 80%\",\n            // end: \"+=100\",\n            scrub: 1,\n          },\n        });\n      },\n    });\n  }, []);\n  return (\n    <Col md={4}>\n      <div className=\"img-wrapper\" ref={(e) => (selectCards = e)}>\n        <img src={props.imgPath} alt=\"client\" className=\"img-fluid\" />\n        <div className=\"overlay-text\">\n          <h1 ref={(e) => (selectcardHeading = e)}>{props.heading}</h1>\n          <p ref={(e) => (selectcardPara = e)}>{props.paragraph}</p>\n        </div>\n      </div>\n    </Col>\n  );\n};\n\nexport default Capabilities;\n"]},"metadata":{},"sourceType":"module"}