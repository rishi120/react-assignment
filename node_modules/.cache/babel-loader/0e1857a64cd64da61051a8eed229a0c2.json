{"ast":null,"code":"var _jsxFileName = \"/var/www/html/workspace/react-assignment/src/components/jumbotron.jsx\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport React, { Component, useRef, useEffect } from \"react\";\nimport Changeheading from \"./changetext\";\n/* gsap imports */\n\nimport gsap, { Power2 } from \"gsap\";\nimport ScrollTrigger from \"gsap/ScrollTrigger\";\ngsap.registerPlugin(ScrollTrigger);\n\nclass Maincontent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      update: [{\n        name: \"Hello World!\"\n      }],\n      updateName: true\n    };\n\n    this.toggleHeading = () => {\n      this.setState({\n        update: [{\n          name: \"Jumbotron\"\n        }]\n      });\n    };\n\n    this.changeText = nameChanged => {\n      this.setState({\n        update: [{\n          name: nameChanged.target.value\n        }]\n      });\n    };\n  }\n\n  render() {\n    let selectHeading = useRef();\n    let selectPara = useRef();\n    let selectButton = useRef();\n    let selectInput = useRef();\n    useEffect(() => {\n      const animateHeading = gsap.timeline();\n      const animatePara = gsap.timeline();\n      const animateButton = gsap.timeline();\n      const animateInput = gsap.timeline();\n      animateHeading.from(selectHeading, {\n        y: -100,\n        opacity: 0,\n        ease: Power2.easeInOut,\n        duration: 0.1,\n        delay: 0.2\n      });\n      animatePara.from(selectPara, {\n        y: -100,\n        opacity: 0,\n        ease: Power2.easeInOut,\n        duration: 0.2,\n        delay: 0.4\n      });\n      animateButton.from(selectButton, {\n        y: -100,\n        opacity: 0,\n        ease: Power2.easeInOut,\n        duration: 0.3,\n        delay: 0.6\n      });\n      animateInput.from(selectInput, {\n        y: -100,\n        opacity: 0,\n        ease: Power2.easeInOut,\n        duration: 0.4,\n        delay: 0.8\n      });\n    }, []);\n    let Newupdate = false;\n\n    if (this.state.updateName) {\n      Newupdate = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"display-3\",\n        ref: e => selectHeading = e,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      }, this.state.update[0].name));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Jumbotron, {\n      className: \"custom-jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, Newupdate, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead\",\n      ref: e => selectPara = e,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, \"This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.toggleHeading,\n      ref: e => selectButton = e,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, \"Update Heading\")), /*#__PURE__*/React.createElement(Changeheading, {\n      changed: this.changeText,\n      ref: e => selectInput = e,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default Maincontent;","map":{"version":3,"sources":["/var/www/html/workspace/react-assignment/src/components/jumbotron.jsx"],"names":["Jumbotron","Button","Container","React","Component","useRef","useEffect","Changeheading","gsap","Power2","ScrollTrigger","registerPlugin","Maincontent","state","update","name","updateName","toggleHeading","setState","changeText","nameChanged","target","value","render","selectHeading","selectPara","selectButton","selectInput","animateHeading","timeline","animatePara","animateButton","animateInput","from","y","opacity","ease","easeInOut","duration","delay","Newupdate","e"],"mappings":"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","sourcesContent":["import Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport React, { Component, useRef, useEffect } from \"react\";\nimport Changeheading from \"./changetext\";\n/* gsap imports */\nimport gsap, { Power2 } from \"gsap\";\nimport ScrollTrigger from \"gsap/ScrollTrigger\";\ngsap.registerPlugin(ScrollTrigger);\n\nclass Maincontent extends Component {\n  state = {\n    update: [{ name: \"Hello World!\" }],\n    updateName: true,\n  };\n  toggleHeading = () => {\n    this.setState({\n      update: [{ name: \"Jumbotron\" }],\n    });\n  };\n  changeText = (nameChanged) => {\n    this.setState({\n      update: [{ name: nameChanged.target.value }],\n    });\n  };\n\n  render() {\n    let selectHeading = useRef();\n    let selectPara = useRef();\n    let selectButton = useRef();\n    let selectInput = useRef();\n\n    useEffect(() => {\n      const animateHeading = gsap.timeline();\n      const animatePara = gsap.timeline();\n      const animateButton = gsap.timeline();\n      const animateInput = gsap.timeline();\n      animateHeading.from(selectHeading, {\n        y: -100,\n        opacity: 0,\n        ease: Power2.easeInOut,\n        duration: 0.1,\n        delay: 0.2,\n      });\n      animatePara.from(selectPara, {\n        y: -100,\n        opacity: 0,\n        ease: Power2.easeInOut,\n        duration: 0.2,\n        delay: 0.4,\n      });\n      animateButton.from(selectButton, {\n        y: -100,\n        opacity: 0,\n        ease: Power2.easeInOut,\n        duration: 0.3,\n        delay: 0.6,\n      });\n      animateInput.from(selectInput, {\n        y: -100,\n        opacity: 0,\n        ease: Power2.easeInOut,\n        duration: 0.4,\n        delay: 0.8,\n      });\n    }, []);\n    let Newupdate = false;\n    if (this.state.updateName) {\n      Newupdate = (\n        <div>\n          <h1 className=\"display-3\" ref={(e) => (selectHeading = e)}>\n            {this.state.update[0].name}\n          </h1>\n        </div>\n      );\n    }\n    return (\n      <div>\n        <Jumbotron className=\"custom-jumbotron\">\n          <Container>\n            {Newupdate}\n            <p className=\"lead\" ref={(e) => (selectPara = e)}>\n              This is a simple hero unit, a simple jumbotron-style component for\n              calling extra attention to featured content or information.\n            </p>\n            <p className=\"lead\">\n              <Button\n                variant=\"primary\"\n                onClick={this.toggleHeading}\n                ref={(e) => (selectButton = e)}\n              >\n                Update Heading\n              </Button>\n            </p>\n            <Changeheading\n              changed={this.changeText}\n              ref={(e) => (selectInput = e)}\n            ></Changeheading>\n          </Container>\n        </Jumbotron>\n      </div>\n    );\n  }\n}\n\nexport default Maincontent;\n"]},"metadata":{},"sourceType":"module"}