{"ast":null,"code":"var _jsxFileName = \"/var/www/html/workspace/react-assignment/src/components/capabilities.js\";\nimport React, { useRef, useEffect } from \"react\";\nimport Col from \"react-bootstrap/Col\";\n/* gsap imports */\n\nimport gsap, { Power2 } from \"gsap\";\nimport ScrollTrigger from \"gsap/ScrollTrigger\";\ngsap.registerPlugin(ScrollTrigger);\n\nconst Capabilities = props => {\n  let selectCards = useRef();\n  let selectcardHeading = useRef();\n  let selectcardPara = useRef();\n  useEffect(() => {\n    let animateCard = gsap.timeline();\n    let animateHeading = gsap.timeline();\n    let animateParagraph = gsap.timeline(); // match media function to set up animations for screens larger then 1200px\n\n    ScrollTrigger.matchMedia({\n      \"(min-width: 1200px)\": function () {\n        animateCard.from(selectCards, {\n          y: -50,\n          opacity: 0,\n          // ease: Power2.easeInOut,\n          duration: 0.3,\n          delay: 0.2,\n          scrollTrigger: {\n            trigger: \"selectCards\",\n            start: \"top 80%\",\n            // end: \"+=100\",\n            scrub: 1,\n            stagger: 0.5 // markers: true,\n\n          }\n        });\n        animateHeading.from(selectcardHeading, {\n          y: 50,\n          opacity: 0,\n          duration: 0.3,\n          delay: 0.4,\n          // ease: Power2.easeInOut,\n          scrollTrigger: {\n            trigger: \"selectcardHeading\",\n            start: \"top 80%\",\n            // end: \"+=100\",\n            scrub: 1 // markers: true,\n\n          }\n        });\n        animateParagraph.from(selectcardPara, {\n          y: 50,\n          opacity: 0,\n          duration: 0.3,\n          delay: 0.6,\n          // ease: Power2.easeInOut,\n          scrollTrigger: {\n            trigger: \"selectcardPara\",\n            start: \"top 80%\",\n            // end: \"+=100\",\n            scrub: 1 // markers: true,\n\n          }\n        });\n      },\n      // match media function to set up animations for screens smaller then 1200px\n      \"(max-width: 1200px)\": function () {\n        animateCard.from(selectCards, {\n          y: -50,\n          opacity: 0,\n          ease: Power2.easeInOut,\n          duration: 0.3,\n          delay: 0.2,\n          scrollTrigger: {\n            trigger: \"selectCards\",\n            start: \"top 80%\",\n            // end: \"+=100\",\n            scrub: 1,\n            stagger: 0.5,\n            markers: true\n          }\n        });\n        animateHeading.from(selectcardHeading, {\n          y: 50,\n          opacity: 0,\n          duration: 0.3,\n          delay: 0.4,\n          ease: Power2.easeInOut,\n          scrollTrigger: {\n            trigger: \"selectcardHeading\",\n            start: \"top 80%\",\n            // end: \"+=100\",\n            scrub: 1,\n            markers: true\n          }\n        });\n        animateParagraph.from(selectcardPara, {\n          y: 50,\n          opacity: 0,\n          duration: 0.3,\n          delay: 0.6,\n          ease: Power2.easeInOut,\n          scrollTrigger: {\n            trigger: \"selectcardPara\",\n            start: \"top 80%\",\n            // end: \"+=100\",\n            scrub: 1,\n            markers: true\n          }\n        });\n      }\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"img-wrapper\",\n    ref: e => selectCards = e,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: props.imgPath,\n    alt: \"client\",\n    className: \"img-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overlay-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    ref: e => selectcardHeading = e,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, \" \", props.heading, \" \"), \" \", /*#__PURE__*/React.createElement(\"p\", {\n    ref: e => selectcardPara = e,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 38\n    }\n  }, \" \", props.paragraph, \" \"), \" \"), \" \"), \" \");\n};\n\nexport default Capabilities;","map":{"version":3,"sources":["/var/www/html/workspace/react-assignment/src/components/capabilities.js"],"names":["React","useRef","useEffect","Col","gsap","Power2","ScrollTrigger","registerPlugin","Capabilities","props","selectCards","selectcardHeading","selectcardPara","animateCard","timeline","animateHeading","animateParagraph","matchMedia","from","y","opacity","duration","delay","scrollTrigger","trigger","start","scrub","stagger","ease","easeInOut","markers","e","imgPath","heading","paragraph"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport Col from \"react-bootstrap/Col\";\n/* gsap imports */\nimport gsap, { Power2 } from \"gsap\";\nimport ScrollTrigger from \"gsap/ScrollTrigger\";\ngsap.registerPlugin(ScrollTrigger);\n\nconst Capabilities = (props) => {\n    let selectCards = useRef();\n    let selectcardHeading = useRef();\n    let selectcardPara = useRef();\n\n    useEffect(() => {\n        let animateCard = gsap.timeline();\n        let animateHeading = gsap.timeline();\n        let animateParagraph = gsap.timeline();\n        // match media function to set up animations for screens larger then 1200px\n        ScrollTrigger.matchMedia({\n            \"(min-width: 1200px)\": function() {\n                animateCard.from(selectCards, {\n                    y: -50,\n                    opacity: 0,\n                    // ease: Power2.easeInOut,\n                    duration: 0.3,\n                    delay: 0.2,\n                    scrollTrigger: {\n                        trigger: \"selectCards\",\n                        start: \"top 80%\",\n                        // end: \"+=100\",\n                        scrub: 1,\n                        stagger: 0.5,\n                        // markers: true,\n                    },\n                });\n                animateHeading.from(selectcardHeading, {\n                    y: 50,\n                    opacity: 0,\n                    duration: 0.3,\n                    delay: 0.4,\n                    // ease: Power2.easeInOut,\n                    scrollTrigger: {\n                        trigger: \"selectcardHeading\",\n                        start: \"top 80%\",\n                        // end: \"+=100\",\n                        scrub: 1,\n                        // markers: true,\n                    },\n                });\n                animateParagraph.from(selectcardPara, {\n                    y: 50,\n                    opacity: 0,\n                    duration: 0.3,\n                    delay: 0.6,\n                    // ease: Power2.easeInOut,\n                    scrollTrigger: {\n                        trigger: \"selectcardPara\",\n                        start: \"top 80%\",\n                        // end: \"+=100\",\n                        scrub: 1,\n                        // markers: true,\n                    },\n                });\n            },\n\n            // match media function to set up animations for screens smaller then 1200px\n            \"(max-width: 1200px)\": function() {\n                animateCard.from(selectCards, {\n                    y: -50,\n                    opacity: 0,\n                    ease: Power2.easeInOut,\n                    duration: 0.3,\n                    delay: 0.2,\n                    scrollTrigger: {\n                        trigger: \"selectCards\",\n                        start: \"top 80%\",\n                        // end: \"+=100\",\n                        scrub: 1,\n                        stagger: 0.5,\n                        markers: true,\n                    },\n                });\n                animateHeading.from(selectcardHeading, {\n                    y: 50,\n                    opacity: 0,\n                    duration: 0.3,\n                    delay: 0.4,\n                    ease: Power2.easeInOut,\n                    scrollTrigger: {\n                        trigger: \"selectcardHeading\",\n                        start: \"top 80%\",\n                        // end: \"+=100\",\n                        scrub: 1,\n                        markers: true,\n                    },\n                });\n                animateParagraph.from(selectcardPara, {\n                    y: 50,\n                    opacity: 0,\n                    duration: 0.3,\n                    delay: 0.6,\n                    ease: Power2.easeInOut,\n                    scrollTrigger: {\n                        trigger: \"selectcardPara\",\n                        start: \"top 80%\",\n                        // end: \"+=100\",\n                        scrub: 1,\n                        markers: true,\n                    },\n                });\n            },\n        });\n    }, []);\n    return ( <\n        Col md = { 4 } >\n        <\n        div className = \"img-wrapper\"\n        ref = {\n            (e) => (selectCards = e)\n        } >\n        <\n        img src = { props.imgPath }\n        alt = \"client\"\n        className = \"img-fluid\" / >\n        <\n        div className = \"overlay-text\" >\n        <\n        h1 ref = {\n            (e) => (selectcardHeading = e)\n        } > { props.heading } < /h1> <\n        p ref = {\n            (e) => (selectcardPara = e)\n        } > { props.paragraph } < /p> < /\n        div > <\n        /div> < /\n        Col >\n    );\n};\n\nexport default Capabilities;"]},"metadata":{},"sourceType":"module"}