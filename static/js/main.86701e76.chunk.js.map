{"version":3,"sources":["images/usa.jpg","images/client.jpeg","images/client2.jpeg","images/life1.png","images/life2.png","images/life3.png","images/life4.png","images/story.jpg","components/useroutput.js","components/userinput.js","components/changetext.js","components/jumbotron.js","components/capabilities.js","components/cards.js","components/story.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Useroutput","props","Col","md","className","username","paragraph","children","Userinput","type","placeholder","onChange","changed","Changeheading","style","display","textAlign","padding","borderRadius","border","Maincontent","state","update","name","updateHeading","setState","changeText","nameChanged","target","value","Jumbotron","Container","this","Button","variant","onClick","Component","gsap","registerPlugin","ScrollTrigger","Capabilities","selectCards","useRef","selectcardHeading","selectcardPara","useEffect","animateCard","timeline","animateHeading","animateParagraph","matchMedia","from","y","opacity","duration","delay","scrollTrigger","trigger","start","scrub","stagger","markers","ease","Power2","easeInOut","ref","e","src","imgPath","alt","heading","Cards","useState","para","content","paragraphState","setParagraph","fontSize","letterSpacing","borderBottom","paddingBottom","color","fontWeight","marginBottom","storyHeading","backgroundColor","boxShadow","imgSrc","width","height","Story","definePara","Row","storyImg","zIndex","alignItems","fontStyle","App","output","updateDetails","cardHeading","cardParagraph","updateuserName","newName","namechangedHandler","updateName","updateButton","console","log","margin","font","bind","imgPath1","imgPath2","imgPath3","imgPath4","imgPath5","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.86701e76.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/usa.7056db20.jpg\";","module.exports = __webpack_public_path__ + \"static/media/client.bed06bbc.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/client2.cfee94e4.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/life1.cc4c5db6.png\";","module.exports = __webpack_public_path__ + \"static/media/life2.24e108e6.png\";","module.exports = __webpack_public_path__ + \"static/media/life3.39157b84.png\";","module.exports = __webpack_public_path__ + \"static/media/life4.42d54534.png\";","module.exports = __webpack_public_path__ + \"static/media/story.638814e0.jpg\";","import React from \"react\";\nimport Col from \"react-bootstrap/Col\";\n// import Userinput from \"./userinput\";\n// ES6 function syntax\n\nconst Useroutput = (props) => {\n  return (\n    <Col md={4}>\n      <div className=\"cards\">\n        <h1>{props.username}</h1>\n        <p>{props.paragraph}</p>\n        <div>{props.children}</div>\n      </div>\n    </Col>\n  );\n};\n\nexport default Useroutput;\n","import React from \"react\";\nimport Col from \"react-bootstrap/Col\";\n// ES6 function syntax\n\nconst Userinput = (props) => {\n  return (\n    <Col md={4}>\n      <div className=\"userinput\">\n        <input\n          type=\"text\"\n          placeholder=\"Update Username\"\n          onChange={props.changed}\n          //   value={props.username}\n        />\n      </div>\n    </Col>\n  );\n};\nexport default Userinput;\n","import React from \"react\";\n\nconst Changeheading = (props) => {\n  const input = {\n    display: \"block\",\n    textAlign: \"left\",\n    padding: \"8px\",\n    borderRadius: \"5px\",\n    border: \"1px solid #eee\",\n  };\n  return (\n    <div>\n      <input\n        style={input}\n        type=\"text\"\n        onChange={props.changed}\n        placeholder=\"Update Name\"\n      />\n    </div>\n  );\n};\n\nexport default Changeheading;\n","import Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport React, { Component } from \"react\";\nimport Changeheading from \"./changetext\";\n\nclass Maincontent extends Component {\n  state = {\n    update: [{ name: \"Hello World!\" }],\n  };\n  updateHeading = () => {\n    this.setState({\n      update: [{ name: \"Jumbotron\" }],\n    });\n  };\n  changeText = (nameChanged) => {\n    this.setState({\n      update: [{ name: nameChanged.target.value }],\n    });\n  };\n  render() {\n    return (\n      <div>\n        <Jumbotron className=\"custom-jumbotron\">\n          <Container>\n            <h1 className=\"display-3\">{this.state.update[0].name}</h1>\n            <p className=\"lead\">\n              This is a simple hero unit, a simple jumbotron-style component for\n              calling extra attention to featured content or information.\n            </p>\n            <p className=\"lead\">\n              <Button variant=\"primary\" onClick={this.updateHeading}>\n                Update Heading\n              </Button>\n            </p>\n            <Changeheading changed={this.changeText}></Changeheading>\n          </Container>\n        </Jumbotron>\n      </div>\n    );\n  }\n}\n\nexport default Maincontent;\n","import React, { useRef, useEffect } from \"react\";\nimport Col from \"react-bootstrap/Col\";\n/* gsap imports */\nimport gsap, { Power2 } from \"gsap\";\nimport ScrollTrigger from \"gsap/ScrollTrigger\";\ngsap.registerPlugin(ScrollTrigger);\n\nconst Capabilities = (props) => {\n  let selectCards = useRef();\n  let selectcardHeading = useRef();\n  let selectcardPara = useRef();\n\n  useEffect(() => {\n    let animateCard = gsap.timeline();\n    let animateHeading = gsap.timeline();\n    let animateParagraph = gsap.timeline();\n    // match media function to set up animations for screens larger then 1200px\n    ScrollTrigger.matchMedia({\n      \"(min-width: 1200px)\": function () {\n        animateCard.from(selectCards, {\n          y: -50,\n          opacity: 0,\n          // ease: Power2.easeInOut,\n          duration: 0.3,\n          delay: 0.2,\n          scrollTrigger: {\n            trigger: \"selectCards\",\n            start: \"top 80%\",\n            // end: \"+=100\",\n            scrub: 1,\n            stagger: 0.5,\n            markers: true,\n          },\n        });\n        animateHeading.from(selectcardHeading, {\n          y: 50,\n          opacity: 0,\n          duration: 0.3,\n          delay: 0.4,\n          // ease: Power2.easeInOut,\n          scrollTrigger: {\n            trigger: \"selectcardHeading\",\n            start: \"top 80%\",\n            // end: \"+=100\",\n            scrub: 1,\n            markers: true,\n          },\n        });\n        animateParagraph.from(selectcardPara, {\n          y: 50,\n          opacity: 0,\n          duration: 0.3,\n          delay: 0.6,\n          // ease: Power2.easeInOut,\n          scrollTrigger: {\n            trigger: \"selectcardPara\",\n            start: \"top 80%\",\n            // end: \"+=100\",\n            scrub: 1,\n            markers: true,\n          },\n        });\n      },\n\n      // match media function to set up animations for screens smaller then 1200px\n      \"(max-width: 1200px)\": function () {\n        animateCard.from(selectCards, {\n          y: -50,\n          opacity: 0,\n          ease: Power2.easeInOut,\n          duration: 0.3,\n          delay: 0.2,\n          scrollTrigger: {\n            trigger: \"selectCards\",\n            start: \"top 80%\",\n            // end: \"+=100\",\n            scrub: 1,\n            stagger: 0.5,\n            markers: true,\n          },\n        });\n        animateHeading.from(selectcardHeading, {\n          y: 50,\n          opacity: 0,\n          duration: 0.3,\n          delay: 0.4,\n          ease: Power2.easeInOut,\n          scrollTrigger: {\n            trigger: \"selectcardHeading\",\n            start: \"top 80%\",\n            // end: \"+=100\",\n            scrub: 1,\n            markers: true,\n          },\n        });\n        animateParagraph.from(selectcardPara, {\n          y: 50,\n          opacity: 0,\n          duration: 0.3,\n          delay: 0.6,\n          ease: Power2.easeInOut,\n          scrollTrigger: {\n            trigger: \"selectcardPara\",\n            start: \"top 80%\",\n            // end: \"+=100\",\n            scrub: 1,\n            markers: true,\n          },\n        });\n      },\n    });\n  }, []);\n  return (\n    <Col md={4}>\n      <div className=\"img-wrapper\" ref={(e) => (selectCards = e)}>\n        <img src={props.imgPath} alt=\"client\" className=\"img-fluid\" />\n        <div className=\"overlay-text\">\n          <h1 ref={(e) => (selectcardHeading = e)}>{props.heading}</h1>\n          <p ref={(e) => (selectcardPara = e)}>{props.paragraph}</p>\n        </div>\n      </div>\n    </Col>\n  );\n};\n\nexport default Capabilities;\n","import React, { useState } from \"react\"; //// implementing react hooks\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport imgSrc from \"../images/usa.jpg\";\n\nconst Cards = (props) => {\n  /* inline css */\n  const storyHeading = {\n    textAlign: \"center\",\n    fontSize: \"40px\",\n    letterSpacing: \"2px\",\n    borderBottom: \"1px solid #dedede\",\n    paddingBottom: \"5px\",\n    color: \"#932a33\",\n    fontWeight: \"600\",\n    marginBottom: \"50px\",\n  };\n  const buttonStyle = {\n    display: \"flex\",\n    padding: \"15px\",\n    border: \"none\",\n    backgroundColor: \"rgb(147, 42, 51)\",\n    color: \"white\",\n    borderRadius: \"5px\",\n    boxShadow: \"0px 2px 20px rgba(0, 0, 0, 0.2)\",\n  };\n  const paraStyle = {\n    textAlign: \"justify\",\n  };\n  const imgStyle = {\n    width: \"100%\",\n    height: \"370px\",\n    boxShadow: \"0px 2px 20px rgba(0, 0, 0, 0.3)\",\n    borderRadius: \"5px\",\n  };\n  /* inline css ends */\n\n  const [paragraphState, setParagraph] = useState({\n    para: [\n      {\n        content:\n          \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Lorem ipsum dolor sit amet consectetur adipisicing elit. Lorem ipsum dolor sit amet consectetur adipisicing elit. Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\n      },\n    ],\n  });\n\n  const updateuserName = () => {\n    setParagraph({\n      para: [\n        {\n          content:\n            \"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <div className=\"wrap-around\">\n      <h1 style={storyHeading}>{props.storyHeading}</h1>\n      <div className=\"row\">\n        <Col md={8}>\n          <div className=\"content-wrapper\">\n            <p style={paraStyle}>{paragraphState.para[0].content}</p>\n            <button type=\"button\" style={buttonStyle} onClick={updateuserName}>\n              Update Paragraph\n            </button>\n          </div>\n        </Col>\n        <Col md={4}>\n          <div className=\"card-img\">\n            <img\n              src={imgSrc}\n              alt=\"usa\"\n              className=\"img-fluid\"\n              style={imgStyle}\n            />\n          </div>\n        </Col>\n      </div>\n    </div>\n  );\n};\n\nexport default Cards;\n","import React, { useState } from \"react\"; //// implementing react hooks\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Button from \"react-bootstrap/Button\";\nimport storyImg from \"../images/story.jpg\";\n\nconst Story = () => {\n  const [definePara, setpara] = useState({\n    para: [\n      {\n        content:\n          \"Hi there, this is Chandan Baruah. A Web Developer(UI/UX) based in Bangalore. I love to learn, explore, travel and expertise in the field of Web Development.\",\n      },\n    ],\n  });\n  const storySection = {\n    padding: \"50px 0 50px 0\",\n  };\n\n  const wrapper = {\n    display: \"flex\",\n  };\n  const imgRounded = {\n    borderRadius: \"50%\",\n    height: \"200px\",\n    width: \"200px\",\n    border: \"5px solid #932a33\",\n    boxShadow: \"0px 2px 20px rgba(0, 0, 0, 0.2)\",\n    zIndex: 10,\n  };\n\n  const alignCenter = {\n    display: \"flex\",\n    alignItems: \"center\",\n    height: \"100%\",\n    fontStyle: \"italic\",\n  };\n  return (\n    <section style={storySection}>\n      <Row>\n        <Col md={4}>\n          <div style={wrapper}>\n            <img src={storyImg} alt=\"my-story\" style={imgRounded} />\n          </div>\n        </Col>\n        <Col md={8}>\n          <p style={alignCenter}>{definePara.para[0].content}</p>\n        </Col>\n      </Row>\n    </section>\n  );\n};\nexport default Story;\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Useroutput from \"./components/useroutput\";\nimport Userinput from \"./components/userinput\";\nimport Maincontent from \"./components/jumbotron\";\nimport Capabilities from \"./components/capabilities\";\nimport Cards from \"./components/cards\";\nimport \"./App.css\";\nimport \"./components/user.css\";\nimport imgPath from \"./images/client.jpeg\";\nimport imgPath1 from \"./images/client2.jpeg\";\nimport imgPath2 from \"./images/life1.png\";\nimport imgPath3 from \"./images/life2.png\";\nimport imgPath4 from \"./images/life3.png\";\nimport imgPath5 from \"./images/life4.png\";\nimport Story from \"./components/story\";\n\nclass App extends Component {\n  state = {\n    output: [{ name: \"Chandan\" }, { name: \"Rishiraj\" }],\n    updateDetails: [\n      {\n        cardHeading: \"I am Heading\",\n      },\n      {\n        cardParagraph: \"I am Paragraph\",\n      },\n    ],\n  };\n\n  updateuserName = (newName) => {\n    this.setState({\n      output: [{ name: newName }, { name: \"Rishiraj\" }],\n    });\n  };\n\n  namechangedHandler = (updateName) => {\n    this.setState({\n      output: [\n        { name: updateName.target.value },\n        { name: updateName.target.value },\n      ],\n    });\n  };\n  updateButton = () => {\n    console.log(\"Hi\");\n  };\n  render() {\n    const wrapper = {\n      margin: \"50px 0\",\n      padding: \"20px\",\n      border: \"1px solid #eee\",\n    };\n    const button = {\n      border: \"1px solid #eee\",\n      backgroundColor: \"#fff\",\n      font: \"inherit\",\n      borderRadius: \"3px\",\n      padding: \"5px\",\n      width: \"60%\",\n      fontSize: \"15px\",\n    };\n    return (\n      <div className=\"App\">\n        <Container>\n          <Maincontent></Maincontent>\n          <div style={wrapper}>\n            <Row>\n              <Useroutput\n                username={this.state.output[0].name}\n                paragraph=\"Hey There! Wassup\"\n              >\n                <button\n                  style={button}\n                  type=\"button\"\n                  onClick={this.updateuserName.bind(this, \"Rishi\")}\n                >\n                  Update Username\n                </button>\n              </Useroutput>\n              <Useroutput\n                username={this.state.output[1].name}\n                paragraph=\"Hey There! Wassup\"\n              />\n              <Userinput changed={this.namechangedHandler} />\n            </Row>\n          </div>\n\n          <div>\n            <section className=\"cards-section\">\n              <Row>\n                <Capabilities\n                  imgPath={imgPath}\n                  heading={this.state.updateDetails[0].cardHeading}\n                  paragraph={this.state.updateDetails[1].cardParagraph}\n                ></Capabilities>\n                <Capabilities\n                  imgPath={imgPath1}\n                  heading={this.state.updateDetails[0].cardHeading}\n                  paragraph={this.state.updateDetails[1].cardParagraph}\n                ></Capabilities>\n                <Capabilities\n                  imgPath={imgPath2}\n                  heading={this.state.updateDetails[0].cardHeading}\n                  paragraph={this.state.updateDetails[1].cardParagraph}\n                ></Capabilities>\n                <div className=\"space-between\"></div>\n                <Capabilities\n                  imgPath={imgPath3}\n                  heading={this.state.updateDetails[0].cardHeading}\n                  paragraph={this.state.updateDetails[1].cardParagraph}\n                ></Capabilities>\n                <Capabilities\n                  imgPath={imgPath4}\n                  heading={this.state.updateDetails[0].cardHeading}\n                  paragraph={this.state.updateDetails[1].cardParagraph}\n                ></Capabilities>\n                <Capabilities\n                  imgPath={imgPath5}\n                  heading={this.state.updateDetails[0].cardHeading}\n                  paragraph={this.state.updateDetails[1].cardParagraph}\n                ></Capabilities>\n              </Row>\n            </section>\n\n            <Row>\n              <div className=\"space-between\"></div>\n              <Cards storyHeading=\"Our Story\" />\n            </Row>\n            <Story />\n          </div>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}